(this.webpackJsonp=this.webpackJsonp||[]).push([["sg-fred-configurator"],{BzxC:function(e,t){const{Component:o,Context:n}=Shopware;o.extend("sg-fred-flow-create","sg-fred-flow-detail",{methods:{loadEntityData(){this.flow=this.flowRepository.create(n.api),console.log("flow",flow)},onSave(){return console.log("save that Flow"),this.isLoading=!0,this.isSaveSuccessful=!1,this.flowRepository.save(this.flow,n.api).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.$router.push({name:"sg.fred.flow.detail",params:{id:this.flow.id}})}).catch(e=>{console.log("exception",e)})}}})},J8DS:function(e,t){e.exports='{% block sg_fred_flow_detail %}\n    <sw-page class="sg-fred-flow-detail">\n        <template slot="smart-bar-header">\n            <h2>Create new Flow</h2>\n        </template>\n        <template slot="smart-bar-actions">\n\n                <sw-button\n                    :routerLink="{ name: \'sg.fred.flow.index\' }">\n                    Cancel\n                </sw-button>\n\n                <sw-button-process\n                    class="sw-property-detail__save-action"\n                    :isLoading="isLoading"\n                    :processSuccess="isSaveSuccessful"\n                    :disabled="isLoading"\n                    @process-finish="saveFinish"\n                    variant="primary"\n                    @click.prevent="onSave">\n                    Save\n                </sw-button-process>\n\n        </template>\n        <template #content>\n            <sw-card-view slot="content">\n                <sw-card v-if="flow" title="Basic Information">\n                    <sw-field\n                        label="Name"\n                        placeholder="Put the name here"\n                        v-model="flow.name">\n                        Lorem ipsum dolor sit amet\n                    </sw-field>\n                </sw-card>\n            </sw-card-view>\n        </template>\n\n    </sw-page>\n{% endblock %}\n'},Rsqr:function(e,t,o){"use strict";o.r(t);var n=o("X0zb"),s=o.n(n);const{Component:a,Data:i,Context:r}=Shopware,{Criteria:l}=i;a.register("sg-fred-flow-index",{template:s.a,inject:["repositoryFactory"],data:()=>({flows:null,repository:null}),created(){this.createdComponent()},computed:{columns:()=>[{property:"name",dataIndex:"name",label:"Name",routerLink:"sg.fred.flow.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"createdAt",dataIndex:"createdAt",label:"Created At",allowResize:!0}]},methods:{createdComponent(){this.repository=this.repositoryFactory.create("sg_fred_flow"),this.repository.search(new l,r.api).then(e=>{this.flows=e})}}});var c=o("J8DS"),d=o.n(c);const{Component:p,Context:f}=Shopware;p.register("sg-fred-flow-detail",{template:d.a,inject:["repositoryFactory"],data:()=>({isLoading:!1,isSaveSuccessful:!1,flow:null}),computed:{flowRepository(){return this.repositoryFactory.create("sg_fred_flow")}},created(){this.loadEntityData(),console.log("----------------------------------------------------------------------")},methods:{createdComponent(){this.loadEntityData(),console.log("----------------------------------------------------------------------")},loadEntityData(){console.log("----------------------------------------------------------------------"),this.isLoading=!0,this.flowRepository.get(this.$route.params.id,f.api).then(e=>{this.flow=e,this.isLoading=!1}).catch(e=>{this.isLoading=!1,console.log("exception",e)})},saveFinish(){this.isSaveSuccessful=!1},onSave(){return this.isLoading=!0,this.isSaveSuccessful=!1,this.flowRepository().save(this.flow,f.api).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0}).catch(e=>{console.log("exception",e)})}}});o("BzxC");const{Module:w}=Shopware;w.register("sg-fred-flow",{type:"plugin",name:"flow",title:"Flow",description:"Manage Fred configuration flows",color:"#009bd9",routes:{index:{component:"sg-fred-flow-index",path:"index"},detail:{component:"sg-fred-flow-detail",path:"detail/:id",meta:{parentPath:"sg-fred-flow-index"}},create:{component:"sg-fred-flow-create",path:"create",meta:{parentPath:"sg-fred-flow-index"}}},navigation:[{id:"sg-fred-flow",label:"Fred Flow",color:"#009bd9",path:"sg.fred.flow.index",parent:"sw-catalogue",position:100}]})},X0zb:function(e,t){e.exports='{% block sg_fred_flow_index %}\n    <sw-page class="sg-fred-flow-index">\n        <template slot="smart-bar-actions">\n            <sw-button\n                variant="primary"\n                :routerLink="{ name: \'sg.fred.flow.create\' }">\n                 Create new Flow\n            </sw-button>\n        </template>\n        <template #content>\n            <sw-entity-listing\n                v-if="flows"\n                :items="flows"\n                :repository="repository"\n                :showSelection="false"\n                :columns="columns"\n                detailRoute="sg.fred.flow.detail">\n            </sw-entity-listing>\n        </template>\n    </sw-page>\n{% endblock %}\n'}},[["Rsqr","runtime"]]]);